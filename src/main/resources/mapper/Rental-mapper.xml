<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.corodiak.library.mapper.RentalMapper">
	
	<resultMap type="org.corodiak.library.model.Rental" id="Rental">
		<id column="oid" property="rentalOid" />
		<result column="rentalDate" property="rentalDate" />
		<result column="returnDate" property="returnDate" />
		<result column="isReturn" property="rentalIsReturn"/>
		<association column="material_id" property="rentalMaterial" javaType="org.corodiak.library.model.MaterialImpl">
			<id column="material_id" property="materialOid" />
			<result column="material_name" property="materialName" />
			<result column="material_registerDate" property="materialRegisterDate" />
			<result column="material_price" property="materialPrice" />
			<result column="material_loanable" property="materialLoanable" />
		</association>
		<association column="member_oid" property="rentalMember" javaType="org.corodiak.library.model.Member">
			<id column="member_oid" property="memberOid"/>
			<result column="member_id" property="memberId"/>
			<result column="member_password" property="memberPassword"/>
			<result column="member_name" property="memberName"/>
			<result column="member_phoneNumber" property="memberPhoneNumber"/>
			<result column="member_address" property="memberAddress"/>
		</association>
	</resultMap>
	
	<select id="selectRentalList" resultMap="Rental">
		SELECT
			Rental.oid, Rental.rentalDate, Rental.returnDate, Rental.isReturn,
			Rental.material_id,
				Material.name AS material_name,
				Material.registerDate AS material_registerDate,
				Material.price AS material_price,
				Material.loanable AS material_loanable,
			Rental.member_id AS member_oid,
				Member.id AS member_id,
				Member.password AS member_password,
				Member.name AS member_name,
				Member.phoneNumber AS member_phoneNumber,
				Member.address AS member_address
		FROM Rental
		JOIN Material ON Rental.material_id = Material.oid
		JOIN Member ON Rental.member_id = Member.oid
		ORDER BY oid DESC
	</select>
	
	<select id="selectRentalListByMemberId" parameterType="Map" resultMap="Rental">
		SELECT
			Rental.oid, Rental.rentalDate, Rental.returnDate, Rental.isReturn,
			Rental.material_id,
				Material.name AS material_name,
				Material.registerDate AS material_registerDate,
				Material.price AS material_price,
				Material.loanable AS material_loanable,
			Rental.member_id AS member_oid,
				Member.id AS member_id,
				Member.password AS member_password,
				Member.name AS member_name,
				Member.phoneNumber AS member_phoneNumber,
				Member.address AS member_address
		FROM Rental
		JOIN Material ON Rental.material_id = Material.oid
		JOIN Member ON Rental.member_id = Member.oid
		WHERE Rental.member_id = #{memberOid}
		ORDER BY oid ASC
	</select>
	
	<insert id="insertRental" parameterType="Map">
		<selectKey keyProperty="rental.rentalOid" resultType="Integer" order="BEFORE">
        	SELECT RENTAL_SEQ.nextval AS SEQ FROM dual
		</selectKey>
		INSERT INTO RENTAL (oid, material_id, member_id, rentalDate, returnDate, isReturn)
		VALUES (#{rental.rentalOid}, #{material.materialOid}, #{member.memberOid}, #{rental.rentalDate}, #{rental.returnDate}, #{rental.rentalIsReturn})
	</insert>
	
	<update id="updateRentalIsReturnByMaterialOid" parameterType="Map">
		UPDATE Rental
		SET
			isReturn = #{isReturn}
		WHERE material_id = #{material.materialOid}
	</update>
</mapper>